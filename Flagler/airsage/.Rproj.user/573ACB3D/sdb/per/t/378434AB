{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Flagler Data Review\"\nauthor: \"Amar Sarvepalli\"\ndate: \"September 27, 2016\"\noutput: html_document\n---\n```{r, echo = TRUE}\n# User inputs:\nprojDir         <- \"/Volumes/C/projects/Flagler/airsage\"\nairsage_data    <- c(\"trip_leg_matrix_cusWDH.csv\",\n                      \"trip_leg_matrix_cusWDDP.csv\",\n                      \"trip_leg_submatrix_cusWDDP.csv\",\n                      \"trip_leg_submatrix_cusWDH.csv\")\nairsage_shapeFile <- \"airsarge_districts/TAZs.shp\"\nairsage_Districts <- \"airsarge_districts/Renumber2.txt\"\nacs_shapeFile     <- \n  \n```\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n# load libraries\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(leaflet)\nlibrary(rgdal)\nlibrary(htmltools)\nlibrary(readr)\n\nlibrary(chorddiag)\n\n# Used for computing district centroids\nlibrary(maptools)    # SpatialPolygons2PolySet\nlibrary(PBSmapping)  # calcCentroid\nlibrary(geosphere)\n\nsetwd(projDir)\n```\n\n\n## 1. Review of AirSage Data\nThis memo is divided into following sections:\n\n1) Airsage Data Files\n2) Review of Data: high level summaries\n3) Plot of OD zones and corridor\n4) Census socio-economic data\n5) Plot of current corridor bus routes\n\n\n#### 1.1 Airsage Data File Description\nThis is airsage data review. The following is the description of the data files\n\n1) **trip_leg_matrix_cusWDH.csv**  and **trip_leg_matrix_cusWDDP.csv**: reporting  trips between study area zones for average weekday 24 hour period and specific AM and PM day parts respectively.\n\n2) **trip_leg_submatrix_cusWDH.csv**  and **trip_leg_submatrix_cusWDDP.csv**: reporting trips between study area zones that passed through the sub matrix analysis zone (in the SZCount column) for average weekday 24 hour period and specific AM and PM day parts respectively. \n\nThe following are the list of files received from Airsage along with:\n1) number of samples\n2) number of trips\n3) ratio of trips to samples\n4) percent of samples\n5) percent of trips\n\n```{r read data, echo=FALSE, message=FALSE, warning=FALSE}\n  csvFiles <- dir(projDir, pattern = \".csv\")\n\n  for (c in 1:length(csvFiles)){\n    data <- read.csv(csvFiles[c])\n    nrows <- nrow(data)\n    ntrips <- sum(data$Count)\n    samples <- cbind(csvFiles[c], nrows, ntrips)\n    ifelse (c ==1 , all_samples <- samples, all_samples <- rbind(all_samples, samples))\n    ifelse (c ==1 , count <- nrows, count <- count + nrows)\n    ifelse (c ==1 , trips <- ntrips, trips <- trips + ntrips)\n  }\n\n    all <- data.frame(all_samples, stringsAsFactors = FALSE)\n    all <- rbind(all, c(\"Total\",count, trips))\n    all <- all %>% mutate(trip_per_sample = 100 * as.numeric(ntrips) / as.numeric(nrows))\n    all <- all %>% mutate(pct_samples = 100 * as.numeric(nrows) / count)\n    all <- all %>% mutate(pct_trips = 100 * as.numeric(ntrips) / trips)\n    names(all) <- c(\"File\", \"Samples\", \"Trips\",\"Trips/Samples\" ,\"% Sample\", \"% Trips\")\n    print(kable(all))\n```\n\nPeak data flow shows a total observations of 9,666 whereas total daily flows are only 6,052. \nDoes this mean the daily samples are only for offpeak? \n46% of the daily flow are represented from 24% sample?\n\n\n#### 1.2 Contents of \"trip_leg_matrix_cusWDDP.csv\" and Contents of \"trip_leg_matrix_cusWDDP.csv\"\nThis file contains 9,666 observations and 9 fields. Each sample was geocoded with an _Origin_Zone_ and _Destination_Zone_ pairs and _Count_ represents the total flows betweent these OD pairs. The start and end dates define the data collection period, which is April, 2015. The other fields: _Subscriber_Class_, _Purpose_ and _Time_of_Day_ describe the trip attributes.\n\n```{r trips, echo=TRUE, message=FALSE, warning=FALSE}\n  data_wddp <- read.csv(\"trip_leg_matrix_cusWDDP.csv\")\n  data_wdh <- read.csv(\"trip_leg_matrix_cusWDH.csv\")\n  data_wddp$tod <- \"peak\"\n  data_wdh$tod <- \"24H\"\n  data <- rbind(data_wddp, data_wdh)\n  print(head(data))\n  \n  samples <- data %>% group_by(tod) %>% summarize(sum = sum(Count))\n  samples <- data.frame(samples)\n  kable(samples)\n```\n\n#### 1.3 Contents of Daily file (_trip_leg_matrix_cusWDH.csv_)\n#### Trips by purpose and resident type (Subscriber_Class)\n* There are a total of 7,457,084 OD flows in 24H. \n* About 83% of these trips (6.2 Million daily flows) are made by resident pouplation and the remaining 17% of trip are made by the visitors. \n* Most of the visitor trip purpose was Non-home based (NHB) as expected, however there are few handful of trips that are coded as Home-based other (HBO) trips (0.03%). These trips can be recoded into NHB as it makes less sense to assume a \"home end\" for visitors.\n* Of 6.2 Million resident trips, 17% are Home-based work (HBW), 29% are NHB and 36% are HBO trips. The work share of trips is in acceptable range for HBW trips (typically ~20%).\n\n\n```{r daily trips, echo=FALSE, message=FALSE, warning=FALSE}\n\n  trips_by_type    <- data_wdh %>% group_by(Subscriber_Class) %>% \n                      summarise(trips = sum(Count)) %>% arrange(Subscriber_Class)\n  trips_by_purpose <- data_wdh %>% group_by(Subscriber_Class, Purpose) %>% \n                      summarise(trips = sum(Count)) %>% arrange(Subscriber_Class)\n  trips_by_OD      <- data_wdh %>% group_by(Origin_Zone, Destination_Zone) %>% \n                      summarise(trips = sum(Count)) %>% spread(Destination_Zone, trips)\n\n  # Total trips  \n  sum <- trips_by_type %>% summarise(total = sum(trips))\n  print(paste(\"Total trips = \", as.character(sum), sep =\"\"))\n  \n  # Compute percentage\n  trips_by_type    <- trips_by_type %>%  mutate(percent = 100 * trips/sum$total)\n  trips_by_purpose <- trips_by_purpose %>% mutate(percent = 100 * trips/sum(sum$total))\n  \n  # Print summary\n  kable(trips_by_type)\n  kable(trips_by_purpose)\n  \n  # District to district flows (limit this to Flagler districts)\n  trips_by_OD <- trips_by_OD[,2:41]\n  trips_by_OD[is.na(trips_by_OD)] <- 0\n  m <- as.matrix(trips_by_OD)\n  dist <- c(1:40)\n  dimnames(m) <- list(Origins = dist,Destinations = dist)\n  groupColors <- colors()[dist]\n  chorddiag(m, groupColors = groupColors, groupnamePadding = 20)\n\n```\n\n#### 1.4 Contents of Peak period files (_trip_leg_matrix_cusWDDP.csv_)\n#### Trips by purpose, resident type (Subscriber_Class) and time of day\n* There are a total of 2,945,178 OD flows in the peak two periods. \n* About 85% of these trips (2.5 Million flows) are made by resident pouplation and the remaining 15% of trip are made by the visitors. \n* Most of the visitor trip purpose was Non-home based (NHB) as expected, however there are few handful of trips that are coded as Home-based other (HBO) trips (0.02%). These trips can be recoded into NHB as it makes less sense to assume a \"home end\" for visitors.\n* Of 2.5 Million resident trips, 21% are Home-based work (HBW), 29% are NHB and 34% are HBO trips. The non-work share of trips seems too high given this file contains data only for the 6 hour peak periods.\n* Trips by time of day shows almost equal split between AM and PM peak periods with slightly more trips in PM period.\n\n```{r, echo = FALSE}\n  trips_by_type    <- data_wddp %>% group_by(Subscriber_Class) %>% \n                      summarise(trips = sum(Count)) %>% arrange(Subscriber_Class)\n  trips_by_purpose <- data_wddp %>% group_by(Subscriber_Class, Purpose) %>% \n                      summarise(trips = sum(Count)) %>% arrange(Subscriber_Class)\n  trips_by_period  <- data_wddp %>% group_by(Time_of_Day) %>% \n                      summarise(trips = sum(Count)) %>% arrange(Time_of_Day)\n  trips_by_OD      <- data_wddp %>% group_by(Origin_Zone, Destination_Zone) %>% \n                      summarise(trips = sum(Count)) %>% spread(Destination_Zone, trips)\n\n  # Total trips\n  sum <- trips_by_type %>% summarise(total = sum(trips))\n  print(paste(\"Total trips = \", as.character(sum), sep =\"\"))\n  \n  # Compute percentage\n  trips_by_type    <- trips_by_type %>%  mutate(percent = 100 * trips/sum$total)\n  trips_by_purpose <- trips_by_purpose %>% mutate(percent = 100 * trips/sum(sum$total))\n  trips_by_period  <- trips_by_period %>% mutate(percent = 100 * trips/sum(sum$total))\n  \n  # Print summary\n  kable(trips_by_type)\n  kable(trips_by_purpose)\n  kable(trips_by_period)\n  \n  # District to district flows (limit this to Flagler districts)\n  trips_by_OD <- trips_by_OD[,2:41]\n  trips_by_OD[is.na(trips_by_OD)] <- 0\n  m <- as.matrix(trips_by_OD)\n  dist <- c(1:40)\n  dimnames(m) <- list(Origins = dist,Destinations = dist)\n  groupColors <- colors()[dist]\n  chorddiag(m, groupColors = groupColors, groupnamePadding = 20)\n\n```\n\n#### 1.5 Contents of Peak subarea files (_trip_leg_submatrix_cusWDDP.csv_)\n#### Trips by purpose, resident type (Subscriber_Class) and time of day\n* There are a total of 1,472,307 OD flows in this file which represent EE flows through the region (Not sure I fully flow this file - Need some explaination from Airsage)\n* About 83% of these trips (1.2 Million flows) are made by resident pouplation and the remaining 17% of trip are made by the visitors. \n* 10% of these trips are External-External through trips (ee). This is computed based on _SZCount_ field in the data.\n* The share of ee trips by purpose is consistent across all resident purposes and time of day.\n* Most of the visitor trip purpose was Non-home based (NHB) as expected.\n\n\n```{r sub_ee_peak, echo=FALSE}\n  sub_wddp <- read.csv(\"trip_leg_submatrix_cusWDDP.csv\")\n  trips_by_type    <- sub_wddp %>% group_by(Subscriber_Class) %>% \n                      summarise(trips = sum(Count), ee = sum(SZCount)) %>% arrange(Subscriber_Class)\n  trips_by_purpose <- sub_wddp %>% group_by(Subscriber_Class, Purpose) %>% \n                      summarise(trips = sum(Count), ee = sum(SZCount)) %>% arrange(Subscriber_Class)\n  trips_by_period  <- sub_wddp %>% group_by(Time_of_Day) %>% \n                      summarise(trips = sum(Count), ee = sum(SZCount)) %>% arrange(Time_of_Day)\n  trips_by_OD      <- sub_wddp %>% group_by(Origin_Zone, Destination_Zone) %>% \n                      summarise(trips = sum(Count)) %>% spread(Destination_Zone, trips)\n\n  # Total trips\n  sum <- trips_by_type %>% summarise(total = sum(trips))\n  ee_sum <- trips_by_type %>% summarise(total = sum(ee))\n  print(paste(\"Total trips = \", as.character(sum), sep =\"\"))\n  \n  # Compute percentage\n  trips_by_type <- trips_by_type %>%  mutate(pct_trips = 100 * trips/sum$total, \n                                             pct_ee = 100 * ee/ee_sum$total, \n                                             ee_share = 100 * ee/trips)\n  \n  trips_by_purpose <- trips_by_purpose %>% mutate(pct_trips = 100 * trips/sum(sum$total), \n                                             pct_ee = 100 * ee/ee_sum$total, \n                                             ee_share = 100 * ee/trips)\n  \n  trips_by_period <- trips_by_period %>% mutate(pct_trips = 100 * trips/sum(sum$total), \n                                             pct_ee = 100 * ee/ee_sum$total, \n                                             ee_share = 100 * ee/trips)\n  \n  # Print summary\n  kable(trips_by_type)\n  kable(trips_by_purpose)\n  kable(trips_by_period)\n  \n```\n\n\n#### 1.6 Contents of Peak subarea files (_trip_leg_submatrix_cusWDH.csv_)\n#### Trips by purpose, and resident type (Subscriber_Class) \n* There are a total of 4,001,471 OD flows in this file which represent EE flows through the region (Not sure I fully flow this file - Need some explaination from Airsage)\n* About 80% of these trips (2.9 Million flows) are made by resident pouplation and the remaining 20% of trip are made by the visitors. \n* About 9% of these trips are External-External through trips (ee). This is computed based on _SZCount_ field in the data.\n* The share of ee trips by purpose is consistent across all resident purposes and time of day.\n* Most of the visitor trip purpose was Non-home based (NHB) as expected.\n\n\n```{r sub_ee_daily, echo=FALSE}\n  sub_wdh <- read.csv(\"trip_leg_submatrix_cusWDH.csv\")\n\n  # fix colnames for purpose and time_of_day\n  sub_wdh <- sub_wdh %>% rename(Purpose = Time_of_Day, Time_of_Day = Purpose)\n\n  trips_by_type    <- sub_wdh %>% group_by(Subscriber_Class) %>% \n                      summarise(trips = sum(Count), ee = sum(SZCount)) %>% arrange(Subscriber_Class)\n  trips_by_purpose <- sub_wdh %>% group_by(Subscriber_Class, Purpose) %>% \n                      summarise(trips = sum(Count), ee = sum(SZCount)) %>% arrange(Subscriber_Class)\n  trips_by_period  <- sub_wdh %>% group_by(Time_of_Day) %>% \n                      summarise(trips = sum(Count), ee = sum(SZCount)) %>% arrange(Time_of_Day)\n  trips_by_OD      <- sub_wdh %>% group_by(Origin_Zone, Destination_Zone) %>% \n                      summarise(trips = sum(Count)) %>% spread(Destination_Zone, trips)\n\n  # Total trips\n  sum <- trips_by_type %>% summarise(total = sum(trips))\n  ee_sum <- trips_by_type %>% summarise(total = sum(ee))\n  print(paste(\"Total trips = \", as.character(sum), sep =\"\"))\n  \n  # Compute percentage\n  trips_by_type <- trips_by_type %>%  mutate(pct_trips = 100 * trips/sum$total, \n                                             pct_ee = 100 * ee/ee_sum$total, \n                                             ee_share = 100 * ee/trips)\n  \n  trips_by_purpose <- trips_by_purpose %>% mutate(pct_trips = 100 * trips/sum(sum$total), \n                                             pct_ee = 100 * ee/ee_sum$total, \n                                             ee_share = 100 * ee/trips)\n  \n  trips_by_period <- trips_by_period %>% mutate(pct_trips = 100 * trips/sum(sum$total), \n                                             pct_ee = 100 * ee/ee_sum$total, \n                                             ee_share = 100 * ee/trips)\n  \n  # Print summary\n  kable(trips_by_type)\n  kable(trips_by_purpose)\n  kable(trips_by_period)\n  \n```\n\n*** \n## 2. Reading shape data used in the airsage data aggregation.\n```{r, echo = TRUE}\n# Add project shape files\nshape <- readOGR(\"airsarge_districts/TAZs.shp\", layer = \"TAZs\", verbose = FALSE)\n\n# Read District equivqlency file\ntaz_dist <- read.table(\"airsarge_districts/Renumber2.txt\", sep = \"\\t\", col.names = c(\"Dist\", \"TAZ\",\"pct\"))\n  \n# Compute centroids\nshape_polySet <- SpatialPolygons2PolySet(shape)\n\n# Calculate the centroids \ncentroids <- calcCentroid(shape_polySet, rollup=1)\nshape@data <- cbind(shape@data, centroids)   # Assume internal order matching\n```\n\nSome color settings code that is not displayed here. The district numbers shown below are not in sync with Caltran memo, implies the underlying shape file is not the one used in the development of Airsage zones. Need to replace the zone or else the flow data doesn't make much sense.\n```{r, echo = FALSE}\n\n# Add  color pallets\npal_hh <- colorNumeric(\n  palette = \"Blues\",\n  domain = shape$HHDEN\n)\n\npal_pop <- colorNumeric(\n  palette = \"Reds\",\n  domain = shape$POPDEN\n)\n\npal_work <- colorNumeric(\n  palette = \"Blues\",\n  domain = shape$WORKDEN\n)\n\npal_emp <- colorNumeric(\n  palette = \"Reds\",\n  domain = shape$EMPDEN\n)\n\npal_fact <- colorFactor(topo.colors(6), shape$PlnArea)\n\nm <- leaflet() %>%\n  # Base Map\n  addProviderTiles(\"Stamen.Toner\",group = \"Stamen\") %>%\n  addTiles(group = \"OSM\") %>%\n  setView(lng = -80.1918, lat = 25.7617, zoom = 10) %>%\n  \n  # add district shape files\n  addTiles %>%\n  addPolygons(\n    data = shape, group = \"Districts\", smoothFactor = 0.5,\n    stroke = TRUE,  weight = 3, color = \"grey\",opacity = 0.5,\n    fill = TRUE, fillOpacity = 0.5,\n    fillColor = ~pal_fact(PlnArea), \n    popup = ~paste(sep = \"<br/>\",\n                   htmlEscape(paste(\"District = \",as.character(PlnArea),sep=\"\")),\n                   htmlEscape(paste(\"TAZ = \",as.character(TAZ),sep=\"\")),\n                   htmlEscape(paste(\"AREA = \",as.character(SQMILE), sep=\"\")),\n                   htmlEscape(paste(\"Population =\", as.character(TOTPOP), sep=\"\")),\n                   htmlEscape(paste(\"Households =\", as.character(TOTHH), sep=\"\")),\n                   htmlEscape(paste(\"Workers =\", as.character(TOTWORK), sep=\"\")),\n                   htmlEscape(paste(\"Pop density =\", as.character(POPDEN), sep=\"\")),\n                   htmlEscape(paste(\"HH density =\", as.character(HHDEN), sep=\"\")),\n                   htmlEscape(paste(\"Work density =\", as.character(WORKDEN), sep=\"\"))\n    )\n  ) %>%\n   \n  # Add district names\n  addCircleMarkers(data = shape, lng = shape$X, lat = shape$Y, weight = 1, label = ~as.character(shape$PID), radius = 1, labelOptions = labelOptions(noHide = T))\n\n```\n\n### Review of Airsage data\nAdd Airsage data to the map and compute:\n1. Samples origins and destinations by area\n2. Trips origins and destinations by area\n3. Trips by prupose (table)\n4. Trip flows by purpose (table, d3chord, flowmap)\n\n\n### Review of Household, Population, Worker and Employment data\nThe map below displays population, and household and employment densities. \n\n```{r, echo=FALSE}\n\nmap_hhPop <- m %>%\n  addPolygons(\n    data = shape, group = \"HH Density\", smoothFactor = 0.5,\n    stroke = TRUE,  weight = 3, color = \"grey\",opacity = 0.5,\n    fill = TRUE, fillOpacity = 0.5,\n    fillColor = ~pal_hh(HHDEN)\n  )  %>%  \n  addPolygons(\n    data = shape, group = \"Pop Density\",smoothFactor = 0.5,\n    stroke = TRUE,  weight = 3, color = \"grey\",opacity = 0.5,\n    fill = TRUE, fillOpacity = 0.5,\n    fillColor = ~pal_pop(POPDEN)\n  )  %>%\n   \n  addLegend(\n    \"bottomright\",pal = pal_hh, values = shape$HHDEN,\n     title = \"HH Density\"\n   ) %>%\n  \n  addLegend(\n    \"bottomleft\",pal = pal_pop, values = shape$POPDEN,\n    title = \"Pop Density\", layerId = 1\n  ) %>% \n  \n addLayersControl(\n  baseGroups = c(\"OSM\",\"Stamen\"),\n  overlayGroups = c(\"Districts\", \"HH Density\", \"Pop Density\"),\n  options = layersControlOptions(collapsed = FALSE)\n ) %>%\n\nhideGroup(c( \"HH Density\",\"Pop Density\"))\nmap_hhPop\n```\n\nThe map below displays employment and worker densities. THe worker densities are the household workers which is different the employment data.\n\n```{r, echo = FALSE}\nmap_workEmp <- m %>% \n  \n  addPolygons(\n    data = shape, group = \"Emp Density\",smoothFactor = 0.5,\n    stroke = TRUE,  weight = 3, color = \"grey\",opacity = 0.5,\n    fill = TRUE, fillOpacity = 0.5,\n    fillColor = ~pal_emp(EMPDEN)\n  )  %>% \n  \n  addPolygons(\n    data = shape, group = \"Work Density\",smoothFactor = 0.5,\n    stroke = TRUE,  weight = 3, color = \"grey\",opacity = 0.5,\n    fill = TRUE, fillOpacity = 0.5,\n    fillColor = ~pal_work(WORKDEN)\n  ) %>% \n  \n  addLegend(\n    \"bottomleft\",pal = pal_emp, values = shape$EMPDEN,\n    title = \"Emp Density\", layerId = 2\n  ) %>%\n  \n  addLegend(\n    \"bottomright\",pal = pal_work, values = shape$WORKDEN,\n     title = \"Work Density\"\n   ) %>%\n  \n addLayersControl(\n  baseGroups = c(\"OSM\",\"Stamen\"),\n  overlayGroups = c(\"Districts\", \"Work Density\", \"Emp Density\"),\n  options = layersControlOptions(collapsed = FALSE)\n  ) %>% \n  \n  hideGroup(c(\"Work Density\", \"Emp Density\"))\nmap_workEmp\n```\n\n\n\n\n\n```{r, echo = TRUE}\n   \n#data_wddp <- read.csv(\"trip_leg_matrix_cusWDDP.csv\")\n\n```\n\n\n",
    "created" : 1474995936003.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "195303519",
    "id" : "378434AB",
    "lastKnownWriteTime" : 1475685311,
    "last_content_update" : 1475685311316,
    "path" : "/Volumes/C/projects/Flagler/airsage/airsage.Rmd",
    "project_path" : "airsage.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}